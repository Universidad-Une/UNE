---
// Props interface
interface Props {
  inscripcionAnual: number;
  seguroEscolar: number;
  coberturaEscolar: number;
  uniformeEscolar: {
    kitCompleto: number;
    ahorro: number;
  };
  uniformeDiario: Array<{
    id: string;
    nombre: string;
    precio: number;
    imagen: string;
  }>;
  planteles: {
    normal: Array<{
      nombre: string;
      inscripcion: number;
      colegiatura: number;
    }>;
    sabatina: Array<{
      nombre: string;
      inscripcion: number;
      colegiatura: number;
    }>;
  };
}

const { 
  inscripcionAnual, 
  seguroEscolar, 
  coberturaEscolar, 
  uniformeEscolar, 
  uniformeDiario,
  planteles 
} = Astro.props;

import Uniforme from "@assets/Imagenes/Uniformes/Gral.jpg"

// Función para detectar si los precios son uniformes
function sonPreciosUniformes(planteles) {
  const normalPrices = planteles.normal.map(p => p.colegiatura);
  const sabatinaPrices = planteles.sabatina.map(p => p.colegiatura);
  
  const normalUniforme = normalPrices.every(price => price === normalPrices[0]);
  const sabatinaUniforme = sabatinaPrices.every(price => price === sabatinaPrices[0]);
  
  return normalUniforme && sabatinaUniforme;
}

// Función para detectar si los precios son iguales entre modalidades
function sonPreciosIgualesEntreModalidades(planteles) {
  if (planteles.normal.length === 0 || planteles.sabatina.length === 0) return false;
  return planteles.normal[0].colegiatura === planteles.sabatina[0].colegiatura;
}

const preciosUniformes = sonPreciosUniformes(planteles);
const preciosIgualesEntreModalidades = sonPreciosIgualesEntreModalidades(planteles);
---

<div class="max-w-6xl  md:mt-32 mx-auto p-6">
  <!-- Header -->
  <div class="text-center my-10 md:my-20">
    <h1 class="text-3xl font-bold text-gray-900 mb-2">CONOCE NUESTROS COSTOS</h1>
    <p class="text-gray-600">Conoce toda la información sobre los costos de</p>
    <p class="text-gray-600">inscripción y mensualidades de nuestros planteles</p>
  </div>

  <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
    <!-- Costos Fijos Card -->
    <div class="rounded-lg overflow-hidden shadow-lg relative" style={`background-image: url(${Uniforme.src}); background-size: cover; background-position: center;`}>
      
      <!-- Contenido -->
      <div class="relative z-10 p-6">
        <!-- Título principal -->
        <div class="text-center mb-8">
          <h2 class="text-3xl font-bold text-white mb-2">Costos</h2>
          <p class="text-white text-sm opacity-90">(Todos los Planteles)</p>
        </div>
        
        <div class="space-y-6">
          <!-- Inscripción anual -->
           {inscripcionAnual > 0 && (
  <div class="flex justify-between items-center border-b border-gray-400 pb-4">
    <div>
              <h3 class="text-white font-bold text-lg">Inscripción:</h3>
              <p class="text-white text-sm">Pago único al inicio del ciclo escolar</p>
            </div>
            <div class="text-right">
              <span class="text-3xl font-bold text-white">${inscripcionAnual.toLocaleString()}</span>
            </div>
  </div>
)}
       

           <div class="flex justify-between items-center border-b border-gray-400 pb-4">
            <div>
              <h3 class="text-white font-bold text-lg">Credencial:</h3>
              <p class="text-white text-sm">Pago único hasta vigencia</p>
            </div>
            <div class="text-right">
              <span class="text-3xl font-bold text-white">$240</span>
            </div>
          </div>

          <!-- Seguro Escolar -->
          <div class="flex justify-between items-center border-b border-gray-400 pb-4">
            <div>
              <h3 class="text-white font-bold text-lg">Seguro Escolar</h3>
              <p class="text-white text-sm">Cobertura médica durante el ciclo escolar</p>
            </div>
            <div class="text-right">
              <span class="text-3xl font-bold text-white">${seguroEscolar.toLocaleString()}</span>
            </div>
          </div>

         <!-- Selector de Modalidad -->
<div class="flex flex-col gap-2">
  <div class="flex justify-between items-center">
    <div>
      <h3 class="text-white font-bold text-lg">Modalidad:</h3>
      <p class="text-white text-sm">Selecciona tu modalidad preferida</p>
    </div>
  </div>
  
  <select 
    id="modalidad-select" 
    class="mt-2 bg-transparent text-white border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 shadow-sm"
  >
    <option value="normal" class="text-gray-800 bg-white">Normal</option>
    <option value="sabatina" class="text-gray-800 bg-white">Sabatina</option>
  </select>
</div>

<!-- Colegiatura Mensual -->
<div class="flex flex-col gap-2">
  <div class="flex justify-between items-center">
    <div>
      <h3 class="text-white font-bold text-lg">Colegiatura Mensual</h3>
      <p class="text-white text-sm">
        {preciosUniformes && preciosIgualesEntreModalidades
          ? "Mismo precio en todos los planteles y modalidades" 
          : preciosUniformes
          ? "Mismo precio en todos los planteles"
          : "Selecciona tu plantel para ver el costo"
        }
      </p>
    </div>
    <div class="text-right">
      <span id="colegiatura-precio" class="text-3xl font-bold text-white">
        ${planteles.normal[0]?.colegiatura.toLocaleString() ?? 'N/A'}
      </span>
    </div>
  </div>
  
  {/* Solo mostrar selector si hay diferencias de precio */}
  {!preciosUniformes && (
    <select 
      id="plantel-select" 
      class="mt-2 bg-transparent text-white border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 shadow-sm"
    >
      {planteles.normal.map((plantel) => (
        <option 
          value={plantel.colegiatura} 
          class="text-gray-800 bg-white"
        >
          {plantel.nombre} 
        </option>
      ))}
    </select>
  )}
  
  {/* Si son uniformes, mostrar info de que es igual para todos */}
  {preciosUniformes && (
    <div class="mt-2 text-white text-sm opacity-75">
      <p>✓ Disponible en todos los planteles</p>
    </div>
  )}
</div>
        </div>
      </div>
    </div>

    <!-- Right Column -->
    <div class="space-y-6">
      <!-- Uniformes Escolares -->
      <div class="bg-white rounded-lg shadow-lg p-6">
        <h2 class="text-xl font-bold text-blue-800 mb-4">Uniformes Escolares</h2>
        
        <div class="flex justify-between items-center mb-4">
          <div>
            <h3 class="font-semibold text-gray-800">Kit Deportivo Completo</h3>
            <p class="text-sm text-gray-600">Incluye: Pants + Playera deportiva + Sudadera</p>
          </div>
          <div class="text-right">
            <span class="text-2xl font-bold text-gray-800">${uniformeEscolar.kitCompleto.toLocaleString()}</span>
          </div>
        </div>

        <div class="bg-green-500 text-white text-center py-2 rounded-lg text-sm font-medium">
          Ahorro de ${uniformeEscolar.ahorro} vs compra individual
        </div>
      </div>

      <!-- Uniforme Diario Carousel -->
      <div class="bg-gray-800 rounded-lg overflow-hidden shadow-lg relative">
        <div id="uniform-carousel" class="splide">
          <div class="splide__track">
            <ul class="splide__list">
              {uniformeDiario.map((item) => (
                <li class="splide__slide" key={item.id}>
                  <div class="relative h-80 w-full rounded-lg overflow-hidden">
                    <!-- Imagen de fondo -->
                    <img 
                      src={item.imagen || Uniforme} 
                      alt={item.nombre} 
                      class="w-full h-full object-cover"
                    />
                    
                    <!-- Título superior -->
                    <div class="absolute top-4 left-4 right-4">
                      <h2 class="text-2xl font-bold text-white">Uniforme Diario</h2>
                    </div>
                    
                    <!-- Contenido inferior -->
                    <div class="absolute bottom-4 left-4 right-4">
                      <div class="flex justify-between items-end">
                        <div class="text-white">
                          <h3 class="text-2xl font-bold mb-1">{item.nombre}</h3>
                          <p class="text-3xl font-bold">${item.precio.toLocaleString()}</p>
                        </div>
                       <div class="relative inline-block" id="tooltip-container">
  <button
    class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors focus:outline-none"
    onclick="toggleTooltip(this)"
    onblur="hideTooltip(this)"
  >
    ¿Dónde comprar?
  </button>
  <div
    class="absolute bottom-full mb-2 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white text-xs rounded px-2 py-1 opacity-0 pointer-events-none transition-opacity duration-200 z-10 whitespace-nowrap"
    data-tooltip
  >
    En tu plantel más cercano
  </div>
</div>
                      </div>
                    </div>
                  </div>
                </li>
              ))}
            </ul>
          </div>
        </div>

        <!-- Botones de navegación -->
        <button class="absolute left-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 hover:bg-opacity-75 text-white p-2 rounded-full z-10" id="prev-btn">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </button>
        <button class="absolute right-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 hover:bg-opacity-75 text-white p-2 rounded-full z-10" id="next-btn">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Pasar los datos de planteles a JavaScript -->
<script define:vars={{ planteles, preciosUniformes, preciosIgualesEntreModalidades }}>
  // Datos de planteles disponibles globalmente
  window.plantelesData = planteles;
  window.preciosUniformes = preciosUniformes;
  window.preciosIgualesEntreModalidades = preciosIgualesEntreModalidades;
</script>

<script>
  // Función para actualizar planteles según modalidad
  function updatePlanteles(modalidad) {
    const plantelSelect = document.getElementById('plantel-select');
    const colegiaturaPreci = document.getElementById('colegiatura-precio');
    
    if (!plantelSelect || !colegiaturaPreci) return;
    
    // Limpiar opciones actuales
    plantelSelect.innerHTML = '';
    
    // Agregar nuevas opciones
    window.plantelesData[modalidad].forEach(plantel => {
      const option = document.createElement('option');
      option.value = plantel.colegiatura;
      option.textContent = plantel.nombre;
      option.className = 'text-gray-800 bg-white';
      plantelSelect.appendChild(option);
    });
    
    // Actualizar precio mostrado
    if (window.plantelesData[modalidad].length > 0) {
      colegiaturaPreci.textContent = `$${window.plantelesData[modalidad][0].colegiatura.toLocaleString()}`;
    }
  }

  // Función para actualizar precio cuando cambian modalidad o plantel
  function updatePrecio(modalidad) {
    const colegiaturaPreci = document.getElementById('colegiatura-precio');
    const plantelSelect = document.getElementById('plantel-select');
    
    if (!colegiaturaPreci) return;
    
    // Si los precios son iguales entre modalidades, no cambiar nada
    if (window.preciosIgualesEntreModalidades) {
      return;
    }
    
    if (window.preciosUniformes) {
      // Si los precios son uniformes por modalidad, mostrar el precio de la modalidad seleccionada
      if (window.plantelesData[modalidad] && window.plantelesData[modalidad].length > 0) {
        colegiaturaPreci.textContent = `${window.plantelesData[modalidad][0].colegiatura.toLocaleString()}`;
      }
    } else {
      // Si los precios no son uniformes, actualizar el selector y mostrar el primer precio
      if (plantelSelect) {
        updatePlanteles(modalidad);
      }
    }
  }

  // Event listeners
  document.addEventListener('DOMContentLoaded', function() {
    const modalidadSelect = document.getElementById('modalidad-select');
    const plantelSelect = document.getElementById('plantel-select');
    const colegiaturaPreci = document.getElementById('colegiatura-precio');

    // Cambio de modalidad
    if (modalidadSelect) {
      modalidadSelect.addEventListener('change', function() {
        updatePrecio(this.value);
      });
    }

    // Cambio de plantel (solo si los precios no son uniformes)
    if (plantelSelect && colegiaturaPreci) {
      plantelSelect.addEventListener('change', function() {
        colegiaturaPreci.textContent = `$${parseInt(this.value).toLocaleString()}`;
      });
    }
  });

  // Función para tooltip
  function toggleTooltip(button) {
    const tooltip = button.nextElementSibling;
    tooltip.classList.toggle('opacity-0');
    tooltip.classList.toggle('pointer-events-none');
  }

  function hideTooltip(button) {
    const tooltip = button.nextElementSibling;
    setTimeout(() => {
      tooltip.classList.add('opacity-0');
      tooltip.classList.add('pointer-events-none');
    }, 200);
  }
</script>

<style>
  /* Estilos para el carousel */
  .splide__slide {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100% !important;
    flex-shrink: 0;
  }
  
  .splide__arrows {
    display: none;
  }
  
  .splide__pagination {
    bottom: 10px;
  }
  
  .splide__pagination__page {
    background: rgba(255, 255, 255, 0.5);
  }
  
  .splide__pagination__page.is-active {
    background: white;
  }
  
  /* Asegurar que cada slide tenga el tamaño correcto */
  .splide__track {
    overflow: hidden;
    width: 100%;
  }
  
  .splide__list {
    display: flex;
    align-items: center;
    width: 100%;
  }
  
  /* Forzar que solo se vea una slide a la vez */
  #uniform-carousel .splide__slide {
    min-width: 100%;
    max-width: 100%;
  }
</style>

<script is:inline>
  function toggleTooltip(button) {
    const tooltip = button.parentElement.querySelector('[data-tooltip]');
    const isVisible = tooltip.classList.contains('opacity-100');
    tooltip.classList.toggle('opacity-100', !isVisible);
    tooltip.classList.toggle('opacity-0', isVisible);
    tooltip.classList.toggle('pointer-events-none', isVisible);
  }

  function hideTooltip(button) {
    const tooltip = button.parentElement.querySelector('[data-tooltip]');
    tooltip.classList.remove('opacity-100');
    tooltip.classList.add('opacity-0', 'pointer-events-none');
  }
</script>

<script>
  import { Splide } from '@splidejs/splide';
  
  document.addEventListener('DOMContentLoaded', function() {
    const splide = new Splide('#uniform-carousel', {
      type: 'loop',
      perPage: 1,
      perMove: 1,
      arrows: false,
      pagination: false,
      autoplay: true,
      interval: 4000,
      pauseOnHover: true,
      resetProgress: false,
      gap: '0',
      padding: '0',
      width: '100%',
      height: '320px',
      focus: 'center',
      trimSpace: false,
    });
    
    splide.mount();
  });
</script>
---
// BlogScaleSection.astro
---

<section class="relative min-h-89 flex items-center justify-center pt-8">
  <!-- Elemento escalable con fondo -->
  <div
    id="scalingElement"
    class="relative w-full mx-auto px-6 pt-12 pb-12 text-center text-white will-change-transform transition-transform duration-75 ease-out bg-cover bg-center bg-no-repeat rounded-t-2xl"
    style="transform: scale(0.8); background-image: url('/src/assets//Imagenes/Middles/Visita.png');"
  >
    <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-8 leading-tight">
      ¡Visítanos y Conoce tu Futuro Campus!
    </h2>

    <p
      class="text-lg  lg:text-xl mb-12 max-w-3xl mx-auto leading-relaxed opacity-90"
    >
      ¿Listo para dar el siguiente paso? Agenda una cita con nosotros y descubre
      de cerca todo lo que nuestro plantel tiene para ofrecerte. Recorre
      nuestras instalaciones, conoce a nuestros profesores y resuelve todas tus
      dudas. ¡Te esperamos!
    </p>

    <!-- Botón con glassmorphism -->
    <a href="/contacto/solicitarvisita"
      class="glassmorphism-btn px-8 py-4 text-lg font-semibold text-white transition-all duration-300 hover:bg-white/40 hover:scale-105 active:scale-95"
    >
      Agendar visita
    </a>
  </div>
</section>

<style>
  .glassmorphism-btn {
    border-radius: 7px;
    border: 1px solid rgba(255, 255, 255, 0.4);
    background: rgba(255, 255, 255, 0.32);
    backdrop-filter: blur(10.5px);
    -webkit-backdrop-filter: blur(10.5px);
  }
</style>

<script is:inline>
  // Función para manejar el scroll
  function handleScroll() {
    const scalingElement = document.getElementById("scalingElement");
    if (!scalingElement) return;

    const windowHeight = window.innerHeight;
    const elementRect = scalingElement.getBoundingClientRect();

    // Rango de escala (de 80% a 100%)
    const minScale = 0.8;
    const maxScale = 1.0;

    // Calcular el progreso basado en la posición del elemento
    let scrollProgress = 0;

    // Cuando el elemento está entrando en la vista desde arriba
    if (elementRect.top > 0) {
      // Elemento aún no ha entrado completamente
      const distanceFromTop = elementRect.top;
      const maxDistance = windowHeight;
      scrollProgress = Math.max(
        0,
        Math.min(1, 1 - distanceFromTop / maxDistance)
      );
    }
    // Cuando el elemento está en la vista o saliendo por abajo
    else if (elementRect.bottom > 0) {
      // Elemento está visible, mantener escala máxima
      scrollProgress = 1;
    }
    // Cuando el elemento ya pasó completamente
    else {
      // Elemento ha salido de la vista por abajo, mantener escala máxima
      scrollProgress = 1;
    }

    const scale = minScale + (maxScale - minScale) * scrollProgress;

    // Aplicar la transformación
    scalingElement.style.transform = `scale(${scale})`;
  }

  // Optimización con requestAnimationFrame
  let ticking = false;
  function optimizedScrollHandler() {
    if (!ticking) {
      requestAnimationFrame(() => {
        handleScroll();
        ticking = false;
      });
      ticking = true;
    }
  }

  // Inicializar cuando la página esté lista
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", function () {
      window.addEventListener("scroll", optimizedScrollHandler);
      handleScroll();
    });
  } else {
    window.addEventListener("scroll", optimizedScrollHandler);
    handleScroll();
  }
</script>

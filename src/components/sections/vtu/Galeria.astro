---
import { Fullscreen } from '@lucide/astro';

// Props del componente
export interface Props {
  actividad: string;
}

const { actividad } = Astro.props;

// Importar todas las imágenes de todas las carpetas
const allImages = import.meta.glob('/src/assets/Imagenes/VTU/Galeria/**/*.(jpg|jpeg|png|gif|webp)', { eager: true });

// Filtrar las imágenes por la actividad específica
function getImagesFromFolder(folderName: string) {
  const folderPath = `/src/assets/Imagenes/VTU/Galeria/${folderName}/`;
  
  const filteredImages = Object.entries(allImages)
    .filter(([path]) => path.includes(folderPath))
    .map(([path, module]: [string, any]) => {
      // Extraer el nombre del archivo sin la extensión para usarlo como título
      const fileName = path.split('/').pop()?.split('.')[0] || '';
      const title = fileName.charAt(0).toUpperCase() + fileName.slice(1).replace(/[-_]/g, ' ');
      
      // Obtener la URL correcta de la imagen
      const imageSrc = module.default?.src || module.default || module.src || path;
      
      return {
        src: imageSrc,
        alt: `${folderName} - ${title}`,
        title: title,
        path: path
      };
    })
    .sort((a, b) => a.title.localeCompare(b.title)); // Ordenar alfabéticamente
  
  return filteredImages;
}

// Obtener las imágenes de la carpeta especificada
const images = getImagesFromFolder(actividad);

// Dividir las imágenes en dos filas
const midPoint = Math.ceil(images.length / 2);
const firstRowImages = images.slice(0, midPoint);
const secondRowImages = images.slice(midPoint);
---

{images.length > 0 ? (
<div class="gallery-container">
  <div class="gallery-header mb-6">
    <h2 class="text-2xl font-bold text-center capitalize">{actividad}</h2>
    <p class="text-center text-gray-600 mt-2">{images.length} {images.length === 1 ? 'imagen' : 'imágenes'}</p>
  </div>

  <!-- Primera fila del carousel -->
  <div class="splide carousel-row" id={`carousel-1-${actividad}`}>
    <div class="splide__track">
      <ul class="splide__list">
        {firstRowImages.map((image, index) => (
          <li class="splide__slide">
            <div class="gallery-item group relative overflow-hidden rounded-lg">
              <img
                src={image.src}
                alt={image.alt}
                class="w-80 h-60 object-cover transition-all duration-300 group-hover:scale-105"
                loading="lazy"
              />
              
              <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 backdrop-blur-sm transition-all duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100">
                <div class="text-center flex flex-col justify-center items-center text-white transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300">
                  {image.title && (
                    <h3 class="text-lg font-semibold mb-3 px-4">{image.title}</h3>
                  )}
                </div>
              </div>
            </div>
          </li>
        ))}
      </ul>
    </div>
  </div>

  {secondRowImages.length > 0 && (
  <!-- Segunda fila del carousel -->
  <div class="splide carousel-row" id={`carousel-2-${actividad}`}>
    <div class="splide__track">
      <ul class="splide__list">
        {secondRowImages.map((image, index) => (
          <li class="splide__slide">
            <div class="gallery-item group relative overflow-hidden rounded-lg">
              <img
                src={image.src}
                alt={image.alt}
                class="w-80 h-60 object-cover transition-all duration-300 group-hover:scale-105"
                loading="lazy"
              />
              
              <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 backdrop-blur-sm transition-all duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100">
                <div class="text-center flex flex-col justify-center items-center text-white transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300">
                  {image.title && (
                    <h3 class="text-lg font-semibold mb-3 px-4">{image.title}</h3>
                  )}
                </div>
              </div>
            </div>
          </li>
        ))}
      </ul>
    </div>
  </div>
  )}
</div>
) : (
<div class="gallery-empty">
  <div class="text-center py-12"></span></p>
    <p class="text-gray-400 text-sm mt-2">...</p>
  </div>
</div>
)}

<script>
  import Splide from "@splidejs/splide";
  import "@splidejs/splide/dist/css/splide.min.css";

  document.addEventListener('DOMContentLoaded', function() {
    // Inicializar todos los carousels de Splide con autoscroll
    const carousels = document.querySelectorAll('.splide');
    
    carousels.forEach((carousel) => {
      new Splide(carousel, {
        type: 'loop',
        perPage: 3,
        perMove: 1,
        gap: '1rem',
        pagination: false,
        arrows: true,
        autoplay: true,
        interval: 3000,
        pauseOnHover: true,
        pauseOnFocus: true,
        breakpoints: {
          1024: {
            perPage: 2,
          },
          640: {
            perPage: 1,
          },
        },
      }).mount();
    });
  });
</script>
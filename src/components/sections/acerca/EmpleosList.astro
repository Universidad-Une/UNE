---
import { MapPin, Calendar, Users, BookOpen, Building2 } from '@lucide/astro';

// Simulamos una llamada a API con un delay
const fetchJobs = async () => {
  // Simular delay de API
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  return {
    status: "success",
    total: 3,
    data: [
      {
        id_empleo: 101,
        puesto: "Profesor de Inglés",
        puestos_disponibles: 2,
        ubicacion: "Plantel Centro",
        fecha_publicacion: "2025-08-15",
        descripcion: "Docente para impartir clases de inglés en nivel medio superior."
      },
      {
        id_empleo: 102,
        puesto: "Coordinador Académico",
        puestos_disponibles: 1,
        ubicacion: "Plantel Zapopan",
        fecha_publicacion: "2025-08-20",
        descripcion: "Coordinación académica y supervisión de programas educativos."
      },
      {
        id_empleo: 103,
        puesto: "Docente de Matemáticas",
        puestos_disponibles: 3,
        ubicacion: "Campus Puerto Vallarta",
        fecha_publicacion: "2025-08-25",
        descripcion: "Clases de matemáticas para nivel superior."
      }
    ]
  };
};

// Ejecutar la "llamada" a la API
const jobsResponse = await fetchJobs();
const jobs = jobsResponse.data;

// Función para formatear fecha
const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('es-MX', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// Función para obtener color del badge según disponibilidad
const getBadgeColor = (count: number) => {
  if (count >= 3) return 'bg-green-100 text-green-800';
  if (count >= 2) return 'bg-yellow-100 text-yellow-800';
  return 'bg-red-100 text-red-800';
};
---

<div class="max-w-4xl mx-auto p-6">
  <div class="mb-8">
    <h1 class="text-3xl font-bold text-gray-900 mb-2">
      Empleos Disponibles
    </h1>
    <p class="text-gray-600">
      {jobsResponse.total} oportunidades laborales encontradas
    </p>
  </div>

  <div class="space-y-6">
    {jobs.map((job) => (
      <div class="bg-white rounded-lg shadow-md border border-gray-200 hover:shadow-lg transition-shadow duration-300">
        <div class="p-6">
          {/* Header del trabajo */}
          <div class="flex justify-between items-start mb-4">
            <div class="flex-1">
              <h2 class="text-xl font-semibold text-gray-900 mb-2">
                {job.puesto}
              </h2>
              <div class="flex items-center text-gray-600 mb-2">
                <Building2 class="w-4 h-4 mr-2" />
                <span class="text-sm">{job.ubicacion}</span>
              </div>
            </div>
            <div class={`px-3 py-1 rounded-full text-xs font-medium ${getBadgeColor(job.puestos_disponibles)}`}>
              <Users class="w-3 h-3 inline mr-1" />
              {job.puestos_disponibles} {job.puestos_disponibles === 1 ? 'puesto' : 'puestos'}
            </div>
          </div>

          {/* Descripción */}
          <p class="text-gray-700 mb-4 leading-relaxed">
            {job.descripcion}
          </p>

          {/* Footer con fecha */}
          <div class="flex items-center justify-between pt-4 border-t border-gray-100">
            <div class="flex items-center text-gray-500 text-sm">
              <Calendar class="w-4 h-4 mr-2" />
              <span>Publicado el {formatDate(job.fecha_publicacion)}</span>
            </div>
            
            <a 
              href={`/acerca/Aplicar-empleo?id=${job.id_empleo}&puesto=${encodeURIComponent(job.puesto)}&ubicacion=${encodeURIComponent(job.ubicacion)}&puestos=${job.puestos_disponibles}&fecha=${job.fecha_publicacion}&descripcion=${encodeURIComponent(job.descripcion)}`}
              class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200 flex items-center inline-flex"
            >
              <BookOpen class="w-4 h-4 mr-2" />
              Ver detalles
            </a>
          </div>
        </div>
      </div>
    ))}
  </div>

  {/* Estado vacío si no hay trabajos */}
  {jobs.length === 0 && (
    <div class="text-center py-12">
      <div class="mx-auto w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mb-4">
        <BookOpen class="w-12 h-12 text-gray-400" />
      </div>
      <h3 class="text-lg font-medium text-gray-900 mb-2">
        No hay empleos disponibles
      </h3>
      <p class="text-gray-600">
        Revisa más tarde para ver nuevas oportunidades laborales.
      </p>
    </div>
  )}
</div>

<style>
  /* Animación de carga opcional */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .job-card {
    animation: fadeIn 0.5s ease-out forwards;
  }
</style>
---
// DynamicEducationForm.astro
---

<form id="education-form" class="space-y-3 lg:space-y-4 flex-1 lg:flex-none">
  <!-- Nombre -->
  <div>
    <input 
      type="text" 
      name="nombre"
      placeholder="Nombre del alumno" 
      class="w-full px-2 lg:px-4 py-1.5 lg:py-2.5 border-b-2 border-gray-200 focus:border-blue-500 outline-none transition-colors bg-transparent text-sm lg:text-base"
      required
    />
  </div>

  <!-- Apellidos completos -->
  <div>
    <input 
      type="text" 
      name="apellidos"
      placeholder="Apellidos completos" 
      class="w-full px-2 lg:px-4 py-1.5 lg:py-2.5 border-b-2 border-gray-200 focus:border-blue-500 outline-none transition-colors bg-transparent text-sm lg:text-base"
      required
    />
  </div>

  <!-- Correo electr√≥nico -->
  <div>
    <input 
      type="email" 
      name="correo"
      placeholder="Correo electr√≥nico" 
      class="w-full px-2 lg:px-4 py-1.5 lg:py-2.5 border-b-2 border-gray-200 focus:border-blue-500 outline-none transition-colors bg-transparent text-sm lg:text-base"
      required
    />
  </div>

  <!-- Tel√©fono -->
  <div>
    <input 
      type="tel" 
      name="telefono"
      placeholder="Tel√©fono" 
      class="w-full px-2 lg:px-4 py-1.5 lg:py-2.5 border-b-2 border-gray-200 focus:border-blue-500 outline-none transition-colors bg-transparent text-sm lg:text-base"
      required
    />
  </div>

  <!-- Plantel -->
  <div>
    <select 
      name="plantel" 
      class="w-full px-2 lg:px-4 py-2 border-b-2 border-gray-200 focus:border-blue-500 outline-none transition-colors bg-transparent text-sm lg:text-base"
      required
    >
      <option value="" disabled selected>Seleccione un plantel</option>
      <option value="Torre UNE Milenio">Torre UNE Milenio</option>
      <option value="Milenio">Milenio</option>
      <option value="Plantel Centro">Plantel Centro</option>
      <option value="Centro M√©dico">Centro M√©dico</option>
      <option value="Plaza del Sol">Plaza del Sol</option>
      <option value="Tesist√°n">Tesist√°n</option>
      <option value="Tlajomulco">Tlajomulco</option>
      <option value="Tlaquepaque">Tlaquepaque</option>
      <option value="Tonal√°">Tonal√°</option>
      <option value="Torre Quetzal">Torre Quetzal</option>
      <option value="Plantel Chapultepec">Plantel Chapultepec</option>
      <option value="Campus Puerto Vallarta">Campus Puerto Vallarta</option>
      <option value="Las Juntas Puerto Vallarta">Las Juntas Puerto Vallarta</option>
      <option value="Puerto Vallarta Avenida M√©xico">Puerto Vallarta Avenida M√©xico</option>
      <option value="Plaza Caracol Puerto Vallarta">Plaza Caracol Puerto Vallarta</option>
      <option value="Tepatitl√°n">Tepatitl√°n</option>
    </select>
  </div>

  <!-- Fecha de visita -->
  <div>
    <input 
      type="date" 
      name="fecha_visita"
      class="w-full px-2 lg:px-4 py-2 border-b-2 border-gray-200 focus:border-blue-500 outline-none transition-colors bg-transparent text-sm lg:text-base"
      required
    />
  </div>

  <!-- Hora de visita -->
  <div>
    <input 
      type="time" 
      name="hora_visita"
      class="w-full px-2 lg:px-4 py-2 border-b-2 border-gray-200 focus:border-blue-500 outline-none transition-colors bg-transparent text-sm lg:text-base"
      required
    />
  </div>

  <!-- Relaci√≥n con el visitante -->
  <div>
    <select 
      name="relacion_visita"
      class="w-full px-2 lg:px-4 py-2 border-b-2 border-gray-200 focus:border-blue-500 outline-none transition-colors bg-transparent text-sm lg:text-base"
      required
    >
      <option value="" disabled selected>¬øPara qui√©n es la visita?</option>
      <option value="Soy el interesado">Soy el interesado</option>
      <option value="Es para mi hijo/a">Es para mi hijo/a</option>
    </select>
  </div>

  <!-- Bot√≥n de env√≠o -->
  <div class="pt-2 lg:pt-4">
    <button 
      type="submit"
      id="submit-button"
      class="w-full bg-red-500 hover:bg-red-600 text-white font-semibold py-2.5 lg:py-3 px-6 rounded-md transition-colors duration-200 text-sm lg:text-base disabled:bg-gray-400 disabled:cursor-not-allowed"
      aria-label="ENVIAR MENSAJE" 
      title="ENVIAR MENSAJE"
    >
      <span id="button-text">ENVIAR MENSAJE</span>
    </button>
  </div>

  <!-- Mensaje de respuesta -->
  <div id="response-message" class="hidden mt-4 p-4 rounded-md"></div>
</form>

<script>
  console.log('[EDUCATION FORM] üìù Formulario cargado');

  const form = document.getElementById('education-form');
  const submitButton = document.getElementById('submit-button');
  const buttonText = document.getElementById('button-text');
  const responseMessage = document.getElementById('response-message');
  const apiUrl = 'https://intranet.universidad-une.com/api/createvisit';

  // Funci√≥n para mostrar mensaje
  const showMessage = (message, type = 'success') => {
    responseMessage.classList.remove('hidden', 'bg-green-100', 'text-green-800', 'bg-red-100', 'text-red-800');
    
    if (type === 'success') {
      responseMessage.classList.add('bg-green-100', 'text-green-800');
    } else {
      responseMessage.classList.add('bg-red-100', 'text-red-800');
    }
    
    responseMessage.textContent = message;
    
    // Auto-ocultar despu√©s de 5 segundos
    setTimeout(() => {
      responseMessage.classList.add('hidden');
    }, 5000);
  };

  // Funci√≥n para deshabilitar/habilitar bot√≥n
  const setButtonState = (isLoading) => {
    submitButton.disabled = isLoading;
    buttonText.textContent = isLoading ? 'ENVIANDO...' : 'ENVIAR MENSAJE';
  };

  // Manejar el env√≠o del formulario
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    console.log('[EDUCATION FORM] üöÄ Iniciando env√≠o del formulario');
    
    // Deshabilitar bot√≥n
    setButtonState(true);
    
    // Obtener datos del formulario
    const formData = new FormData(form);
    const data = {
      nombre: formData.get('nombre'),
      apellidos: formData.get('apellidos'),
      correo: formData.get('correo'),
      telefono: formData.get('telefono'),
      plantel: formData.get('plantel'),
      fecha_visita: formData.get('fecha_visita'),
      hora_visita: formData.get('hora_visita'),
      relacion_visita: formData.get('relacion_visita')
    };
    
    console.log('[EDUCATION FORM] üì¶ Datos a enviar:', data);
    
    try {
      console.log('[EDUCATION FORM] üì° Enviando POST a:', apiUrl);
      
      const response = await fetch(apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify(data)
      });
      
      console.log('[EDUCATION FORM] üì¨ Respuesta recibida:', {
        status: response.status,
        statusText: response.statusText,
        ok: response.ok
      });
      
      // Intentar parsear la respuesta
      let responseData;
      try {
        responseData = await response.json();
        console.log('[EDUCATION FORM] ‚úÖ Respuesta JSON:', responseData);
      } catch (parseError) {
        console.error('[EDUCATION FORM] ‚ö†Ô∏è No se pudo parsear JSON:', parseError);
        responseData = { message: 'Respuesta del servidor no v√°lida' };
      }
      
      if (response.ok) {
        console.log('[EDUCATION FORM] üéâ Visita creada exitosamente');
        showMessage('¬°Visita registrada exitosamente! Nos pondremos en contacto contigo pronto.', 'success');
        
        // Limpiar formulario
        form.reset();
      } else {
        console.error('[EDUCATION FORM] ‚ùå Error en la respuesta:', responseData);
        showMessage(
          responseData.message || `Error al registrar la visita (${response.status})`,
          'error'
        );
      }
      
    } catch (error) {
      console.error('[EDUCATION FORM] ‚ùå Error al enviar formulario:', error);
      console.error('[EDUCATION FORM] üìã Detalles del error:', {
        message: error.message,
        name: error.name,
        stack: error.stack
      });
      
      showMessage(
        'Error al conectar con el servidor. Por favor, intenta de nuevo.',
        'error'
      );
    } finally {
      // Habilitar bot√≥n nuevamente
      setButtonState(false);
    }
  });

  // Log cuando los campos cambian (para debugging)
  const inputs = form.querySelectorAll('input, select');
  inputs.forEach(input => {
    input.addEventListener('change', (e) => {
      console.log('[EDUCATION FORM] üìù Campo modificado:', {
        name: e.target.name,
        value: e.target.value
      });
    });
  });

  console.log('[EDUCATION FORM] ‚úÖ Event listeners configurados');
</script>

<style>
  /* Animaci√≥n para el mensaje */
  #response-message {
    animation: slideIn 0.3s ease-out;
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }



  /* Estilos para el bot√≥n en estado de carga */
  #submit-button:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }
</style>
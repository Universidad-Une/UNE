---
// components/RandomStars.astro
const stars = Array.from({ length: 6 }, (_, i) => ({
  top: `${Math.random() * 100}vh`, // Usar vh en lugar de %
  left: `${Math.random() * 95}%`,
  size: `${Math.random() * 35 + 25}px`,
  delay: `${Math.random() * 4}s`,
  opacity: Math.random() * 0.4 + 0.4,
  duration: `${4 + Math.random() * 3}s`
}));

// Crear estrellas adicionales para secciones más abajo
const moreStars = Array.from({ length: 16 }, (_, i) => ({
  top: `calc(100vh + ${Math.random() * 600}vh)`, // Estrellas después del primer viewport
  left: `${Math.random() * 95}%`,
  size: `${Math.random() * 35 + 25}px`,
  delay: `${Math.random() * 4}s`,
  opacity: Math.random() * 0.4 + 0.4,
  duration: `${4 + Math.random() * 3}s`
}));

const allStars = [...stars, ...moreStars];
---

<div class="stars-container">
  {allStars.map((star) => (
    <div 
      class="floating-star"
      style={`
        top: ${star.top};
        left: ${star.left};
        width: ${star.size};
        height: ${star.size};
        animation-delay: ${star.delay};
        opacity: ${star.opacity};
        --duration: ${star.duration};
      `}
    >
      <svg viewBox="0 0 784.52 773.37">
        <path fill="#fac321" d="M234.94,299.75S341.29-37.72,370.29,3.49c29.01,41.21,116.02,267.39,116.02,267.39,0,0,306.05,96.25,298.05,115.5-8,19.25-274.64,120.31-274.64,120.31,0,0-86.26,293.56-134.6,264.68-48.34-28.88-132.1-263.06-132.1-263.06,0,0-273.97-24.68-240.13-82.93,33.84-58.25,232.04-125.62,232.04-125.62Z"/>
      </svg>
    </div>
  ))}
</div>

<style>
  .stars-container {
    position: absolute;
    inset: 0; /* top: 0, left: 0, right: 0, bottom: 0 */
    pointer-events: none;
    z-index: 1;
  }

  .floating-star {
    position: absolute;
    pointer-events: none;
    animation: floatAndSparkle var(--duration) ease-in-out infinite;
    filter: drop-shadow(0 0 8px rgba(252, 196, 33, 0.6));
  }

  @keyframes floatAndSparkle {
    0%, 100% {
      transform: translateY(0px) scale(1);
      filter: drop-shadow(0 0 8px rgba(252, 196, 33, 0.6)) brightness(1);
    }
    25% {
      transform: translateY(-15px) scale(1.1);
      filter: drop-shadow(0 0 12px rgba(252, 196, 33, 0.8)) brightness(1.3);
    }
    50% {
      transform: translateY(-10px) scale(0.95) rotate(5deg);
      filter: drop-shadow(0 0 6px rgba(252, 196, 33, 0.5)) brightness(1.1);
    }
    75% {
      transform: translateY(-5px) scale(1.05) rotate(-3deg);
      filter: drop-shadow(0 0 15px rgba(252, 196, 33, 0.9)) brightness(1.5);
    }
  }

  @media (max-width: 768px) {
    .floating-star {
      width: 20px !important;
      height: 20px !important;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .floating-star {
      animation: none !important;
    }
  }
</style>
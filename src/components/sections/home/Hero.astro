---
// src/components/MainSlider.astro
import ComercialMp4 from "@/assets/Videos/Comercial.mp4";
import Comercial_mobile from "@/assets/Videos/UNE_mobile.webm";
import ComercialWebm from "@/assets/Videos/Comercial.webm";
import { ArrowRight } from "@lucide/astro";
---

<div class="relative w-full">
  <div id="main-slider" class="splide relative">
    <div class="splide__track">
      <ul class="splide__list">
        <li class="splide__slide">
          <div class="relative w-full overflow-hidden h-[650px]">
            <video
              id="mainVideo"
              autoplay
              muted
              playsinline
              class="w-full h-full object-cover"
            >
              <source
                src={ComercialWebm}
                type="video/webm"
                media="(min-width: 768px)"
              />
              <source
                src={ComercialMp4}
                type="video/mp4"
                media="(min-width: 768px)"
              />
              <source
                src={Comercial_mobile}
                type="video/mp4"
                media="(max-width: 767px)"
              />
              Tu navegador no soporta video HTML5.
            </video>

            <div
              class="absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent pointer-events-none"
            >
            </div>
          </div>
        </li>

        <li class="splide__slide">
          <div
            class="oferta-bg relative w-full overflow-hidden h-[650px] bg-cover bg-center bg-no-repeat flex flex-col items-center justify-center"
          >
            <div class="text-center">
              <h2
                class="text-white text-4xl sm:text-5xl lg:text-6xl font-bold mb-4"
              >
                OFERTA ACADÉMICA
              </h2>
              <p
                class="text-white/90 text-lg sm:text-xl max-w-2xl mx-auto px-6"
              >
                Descubre nuestros programas educativos diseñados para tu éxito
                profesional
              </p>
            </div>
            <a
              class="bg-rojo-une py-4 px-8 rounded-md mt-12 text-white"
              href="acerca/oferta-academica"
              >Explorar oferta
            </a>
            <div
              class="absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent pointer-events-none"
            >
            </div>
          </div>
        </li>

        <li class="splide__slide">
          <div
            class="historia-bg w-full overflow-hidden h-[650px] bg-cover bg-center bg-no-repeat flex items-center justify-center"
          >
            <div class="text-center flex flex-col items-center">
              <h2
                class="text-white text-4xl sm:text-5xl lg:text-6xl font-bold mb-4"
              >
                NUESTRA HISTORIA
              </h2>
              <p
                class="text-white/90 text-lg sm:text-xl max-w-2xl mx-auto px-6"
              >
                30 años construyendo futuro, formando profesionales exitosos
              </p>
              <a
                class="bg-rojo-une py-4 px-8 rounded-md mt-24 text-white"
                href="acerca/historia"
                >Conocer más de UNE
              </a>
            </div>
            <div
              class="absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent pointer-events-none"
            >
            </div>
          </div>
        </li>

        <li class="splide__slide">
          <div
            class="becas-bg relative w-full overflow-hidden h-[650px] bg-cover bg-center bg-no-repeat flex items-center justify-center"
          >
            <div class="text-center flex flex-col items-center">
              <h2
                class="text-white text-4xl sm:text-5xl lg:text-6xl font-bold mb-4"
              >
                APOYOS EDUCATIVOS
              </h2>
              <p
                class="text-white/90 text-lg sm:text-xl max-w-2xl mx-auto px-6"
              >
                Becas y programas de apoyo para hacer realidad tus metas
                académicas
              </p>
              <a
                class="bg-rojo-une py-4 px-8 rounded-md mt-24 text-white"
                href="acerca/Apoyos"
                >Descubrir apoyos
              </a>
            </div>
            <div
              class="absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent pointer-events-none"
            >
            </div>
          </div>
        </li>
      </ul>
    </div>
  </div>

  <div class="absolute bottom-0 left-0 right-0 p-4 sm:p-6 lg:p-8 z-10">
    <div
      class="flex flex-col sm:flex-row items-end justify-between gap-4 sm:gap-6 w-full"
    >
      <div class="flex items-end gap-4 w-full sm:w-auto">
        <button
          id="playPauseBtn"
          class="bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all duration-300 backdrop-blur-sm shrink-0"
          aria-label="Pausar"
        >
          <svg
            id="pauseIcon"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <rect x="6" y="4" width="4" height="16"></rect>
            <rect x="14" y="4" width="4" height="16"></rect>
          </svg>
          <svg
            id="playIcon"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="hidden"
          >
            <polygon points="5,3 19,12 5,21"></polygon>
          </svg>
        </button>
      </div>

      <div class="flex items-end w-full gap-2 sm:gap-4 lg:gap-6">
        <div
          class="progress-line flex-shrink-0 flex-grow w-[16%] data-[active='true']:w-[50%] transition-all duration-300"
          data-slide-index="0"
        >
          <h3
            class="text-white text-base-custom md:text-lg-custom font-semibold tracking-wide text-center sm:text-left hidden md:block whitespace-nowrap"
          >
            30 AÑOS CREYENDO EN TI
          </h3>
        </div>

        <div
          class="progress-line flex-shrink-0 flex-grow w-[16%] data-[active='true']:w-[50%] transition-all duration-300"
          data-slide-index="1"
        >
          <h3
            class="text-white text-base-custom md:text-lg-custom font-semibold tracking-wide text-center sm:text-left hidden md:block whitespace-nowrap"
          >
            OFERTA ACADÉMICA
          </h3>
        </div>

        <div
          class="progress-line flex-shrink-0 flex-grow w-[16%] data-[active='true']:w-[50%] transition-all duration-300"
          data-slide-index="2"
        >
          <h3
            class="text-white text-base-custom md:text-lg-custom font-semibold tracking-wide text-center sm:text-left hidden md:block whitespace-nowrap"
          >
            NUESTRA HISTORIA
          </h3>
        </div>

        <div
          class="progress-line flex-shrink-0 flex-grow w-[16%] data-[active='true']:w-[50%] transition-all duration-300"
          data-slide-index="3"
        >
          <h3
            class="text-white text-base-custom md:text-lg-custom font-semibold tracking-wide text-center sm:text-left hidden md:block whitespace-nowrap"
          >
            APOYOS EDUCATIVOS
          </h3>
        </div>
      </div>
    </div>
  </div>
</div>

<div
  class="full-width flex flex-col md:flex-row justify-between px-4 md:px-16 py-8 items-center md:items-start"
  id="partialHero"
>
  <h2 class="font- text-3xl md:text-4xl text-center md:text-left mb-4 md:mb-0">
    Educación queeeee <span class="text-rojo-une">transforma</span>
    <span class="hidden md:inline">vidas</span>
    <span class="block md:hidden">vidas</span>
    -hola
  </h2>

  <a
    class="flex font-normal md:font-bold text-xl md:text-2xl uppercase h-14 bg-rojo-une text-white w-auto px-8 md:px-12 py-2.5 gap-8 md:gap-12 rounded-2xl
          group transition-colors duration-300 ease-in-out justify-center md:justify-between"
    href="/contacto/solicitarinformacion"
  >
    contáctanos
    <span
      class="border-2 border-white rounded-full p-1
            group-hover:border-blue-500 transition-colors duration-300 ease-in-out
            flex items-center justify-center"
    >
      <ArrowRight class="h-6 w-6" />
    </span>
  </a>
</div>

<style>
  /* Para Vite */
  .oferta-bg {
    background-image: url("/src/assets/Imagenes/Heros/Admision.jpg");
  }

  @media (max-width: 767px) {
    .oferta-bg {
      background-image: url("/src/assets/Imagenes/Heros/Admision_mobile2.jpg");
    }
  }

  .historia-bg {
    background-image: url("/src/assets/Imagenes/Heros/historia.jpg");
  }

  @media (max-width: 767px) {
    .historia-bg {
      background-image: url("/src/assets/Imagenes/Heros/Admision_mobile.jpg");
    }
  }

  .becas-bg {
  background-image: url('/src/assets/Imagenes/Heros/Becas.jpg');
}

@media (max-width: 767px) {
  .becas-bg {
    background-image: url('/src/assets/Imagenes/Heros/becas_mobile.jpg');
  }
}

  /* Estilos base para Splide */
  .splide {
    position: relative;
    width: 100%;
  }

  .splide__track {
    position: relative;
    overflow: hidden;
    border-radius: 0.5rem;
  }

  .splide__list {
    display: flex;
    align-items: flex-start;
    list-style: none;
    margin: 0;
    padding: 0;
    transition: transform 0.6s ease;
  }

  .splide__slide {
    flex-shrink: 0;
    width: 100%;
    opacity: 1;
  }

  /* Base styles for the progress line */
  .progress-line {
    position: relative;
    overflow: visible; /* Changed from hidden to visible */
    cursor: pointer;
    /* white-space: nowrap; // Removed this to allow text wrapping */
    padding-bottom: 8px;
    transition: opacity 0.3s ease;
  }

  /* The gray background line */
  .progress-line::before {
    content: "";
    position: absolute;
    bottom: 0px;
    left: 0%;
    width: 100%;
    height: 2px;
    background: rgba(255, 255, 255, 0.3);
    z-index: 1;
    border-radius: 1px;
  }

  /* The active fill line */
  .progress-line::after {
    content: "";
    position: absolute;
    bottom: 0px;
    left: 0%;
    width: 0%;
    height: 2px;
    background: rgba(255, 255, 255, 1);
    z-index: 2;
    transform-origin: left center;
    transition: width 0.3s ease-out;
    border-radius: 1px;
  }

  /* Active state for current slide */
  .progress-line.is-active::after {
    width: 0%;
    animation: progressFill var(--slide-duration) linear forwards;
  }

  /* Completed state for previous slides */
  .progress-line.is-completed::after {
    width: 100%;
    animation: none;
  }

  /* Animation for the progress bar fill */
  @keyframes progressFill {
    from {
      width: 0%;
    }
    to {
      width: 100%;
    }
  }

  /* Style for text of inactive slides */
  .progress-line:not(.is-active):not(.is-completed) {
    opacity: 0.6;
  }

  /* Style for text of active slide */
  .progress-line.is-active {
    opacity: 1;
    color: white;
    font-weight: 600;
  }

  /* Style for completed slides */
  .progress-line.is-completed {
    opacity: 0.8;
  }

  /* Paused state styles */
  .progress-line.is-paused::after {
    animation-play-state: paused;
  }

  /* Hover effect for navigation */
  .progress-line:hover {
    opacity: 1;
    transform: translateY(-1px);
    transition: all 0.2s ease;
  }

  /* Responsive adjustments (can be removed if handled purely by Tailwind) */
  @media (max-width: 650px) {
    .progress-line::before,
    .progress-line::after {
      width: 100%;
    }
  }
</style>
<script>
  import { Splide } from "@splidejs/splide";

  // DOM elements
  const mainVideo = document.getElementById("mainVideo");
  const playPauseBtn = document.getElementById("playPauseBtn");
  const playIcon = document.getElementById("playIcon");
  const pauseIcon = document.getElementById("pauseIcon");
  const progressLines = document.querySelectorAll(".progress-line");
  const mainSliderElement = document.getElementById("main-slider");

  let splideInstance = null;
  let isVideoPlaying = true;
  let videoProgressInterval = null;
  let slideProgressInterval = null;
  let isPaused = false;
  let autoplayTimeout = null; // Custom autoplay mechanism

  // Durations for each slide in milliseconds
  const slideDurations = [
    60000, // 1 minuto (60 segundos * 1000 ms)
    10000, // 10 seconds for Oferta Académica
    10000, // 10 seconds for Nuestra Historia
    10000, // 10 seconds for Apoyos Educativos
  ];

  // Custom autoplay functions
  function startAutoplay(currentIndex) {
    clearAutoplay();

    if (isPaused) return;

    const duration = slideDurations[currentIndex];

    autoplayTimeout = setTimeout(() => {
      if (!isPaused && splideInstance) {
        const nextIndex = (currentIndex + 1) % slideDurations.length;
        splideInstance.go(nextIndex);
      }
    }, duration);
  }

  function clearAutoplay() {
    if (autoplayTimeout) {
      clearTimeout(autoplayTimeout);
      autoplayTimeout = null;
    }
  }

  function pauseAutoplay() {
    clearAutoplay();
  }

  function resumeAutoplay() {
    if (splideInstance && !isPaused) {
      startAutoplay(splideInstance.index);
    }
  }

  // Function to initialize Splide
  function initializeSplide() {
    if (!mainSliderElement) {
      console.error("Splide container not found.");
      return;
    }

    splideInstance = new Splide(mainSliderElement, {
      type: "slide",
      autoplay: false, // Disable built-in autoplay
      arrows: false,
      pagination: false,
      keyboard: false,
      drag: false,
      speed: 600,
      pauseOnHover: false,
      pauseOnFocus: false,
      rewind: true,
    });

    splideInstance.mount();

    // Splide Event Listeners
    splideInstance.on("moved", (newIndex) => {
      handleSlideChange(newIndex);
    });

    // Initialize first slide
    handleSlideChange(splideInstance.index);
  }

  // Handle slide changes
  function handleSlideChange(newIndex) {
    console.log(`Slide changed to: ${newIndex}`);

    // Clear any existing intervals and timeouts
    clearInterval(videoProgressInterval);
    clearInterval(slideProgressInterval);
    clearAutoplay();

    updateProgressBars(newIndex);

    if (playPauseBtn) {
      if (newIndex === 0) {
        playPauseBtn.style.display = "block"; // Show button for video slide
      } else {
        playPauseBtn.style.display = "none"; // Hide button for other slides
      }
    }

    if (newIndex === 0) {
      // Video slide
      if (mainVideo) {
        mainVideo.currentTime = 0;
        if (!isPaused) {
          mainVideo.play().catch((e) => console.log("Video play error:", e));
          startVideoProgress();
          updatePlayPauseButton(true);
        } else {
          mainVideo.pause();
          updatePlayPauseButton(false);
        }
      }

      // Start custom autoplay for video
      if (!isPaused) {
        startAutoplay(0);
      }
    } else {
      // Non-video slide
      if (mainVideo && !mainVideo.paused) {
        mainVideo.pause();
      }

      if (!isPaused) {
        startSlideProgress(newIndex);
        startAutoplay(newIndex);
      } else {
        startSlideProgress(newIndex); // If paused, only initialize progress bar
      }
    }
  }

  // Update visual state of progress bars
  function updateProgressBars(currentSlideIndex) {
    progressLines.forEach((line, index) => {
      line.classList.remove("is-active", "is-completed", "is-paused");
      line.style.setProperty("--slide-duration", "0s");

      if (index < currentSlideIndex) {
        line.classList.add("is-completed");
      } else if (index === currentSlideIndex) {
        line.classList.add("is-active");

        if (isPaused) {
          line.classList.add("is-paused");
        }

        let duration = slideDurations[index];

        if (index === 0) {
          // Always use fixed value for slide 0
          duration = slideDurations[0];
        }

        if (duration) {
          line.style.setProperty("--slide-duration", `${duration / 1000}s`);
        }
      }
    });
  }

  // Start progress bar animation for non-video slides
  function startSlideProgress(slideIndex) {
    if (slideIndex === 0) return;

    const duration = slideDurations[slideIndex];
    const progressLine = progressLines[slideIndex];

    if (!duration || !progressLine) return;

    progressLine.style.setProperty("--slide-duration", `${duration / 1000}s`);
    progressLine.classList.remove("is-active");
    void progressLine.offsetWidth;
    progressLine.classList.add("is-active");

    slideProgressInterval = setTimeout(() => {
      if (!isPaused && splideInstance) {
        progressLine.classList.remove("is-active");
        progressLine.classList.add("is-completed");
        // The autoplay mechanism will handle the transition
      }
    }, duration);
  }

  // Control video play/pause and slider
  function togglePlayPause() {
    isPaused = !isPaused;

    if (isPaused) {
      if (splideInstance.index === 0 && mainVideo) {
        mainVideo.pause();
        clearInterval(videoProgressInterval);
      } else {
        clearInterval(slideProgressInterval);
      }
      pauseAutoplay();

      progressLines.forEach((line) => {
        if (line.classList.contains("is-active")) {
          line.classList.add("is-paused");
        }
      });

      updatePlayPauseButton(false);
    } else {
      if (splideInstance.index === 0 && mainVideo) {
        mainVideo.play().catch((e) => console.log("Video play error:", e));
        startVideoProgress();
      } else {
        startSlideProgress(splideInstance.index);
      }
      resumeAutoplay();

      progressLines.forEach((line) => {
        line.classList.remove("is-paused");
      });

      updatePlayPauseButton(true);
    }
  }

  // Helper to update play/pause button icon
  function updatePlayPauseButton(playing) {
    isVideoPlaying = playing;
    if (playing) {
      playIcon.classList.add("hidden");
      pauseIcon.classList.remove("hidden");
      playPauseBtn.setAttribute("aria-label", "Pausar");
    } else {
      playIcon.classList.remove("hidden");
      pauseIcon.classList.add("hidden");
      playPauseBtn.setAttribute("aria-label", "Reproducir");
    }
  }

  // Start progress bar animation for the video
  function startVideoProgress() {
    clearInterval(videoProgressInterval);

    if (!mainVideo) return;

    const videoDurationMs = slideDurations[0]; // Use fixed 1 minute value
    const videoCurrentTimeMs = mainVideo.currentTime * 1000;
    const remainingTimeMs = videoDurationMs - videoCurrentTimeMs;

    if (remainingTimeMs <= 0) {
      if (splideInstance) {
        splideInstance.go("+1");
      }
      return;
    }

    const firstProgressLine = progressLines[0];
    if (firstProgressLine) {
      firstProgressLine.style.setProperty(
        "--slide-duration",
        `${remainingTimeMs / 1000}s`,
      );

      firstProgressLine.classList.remove("is-active");
      void firstProgressLine.offsetWidth;
      firstProgressLine.classList.add("is-active");
    }

    videoProgressInterval = setInterval(() => {
      // Advance if video ends or if 1 minute has passed (our fixed duration)
      if (
        !mainVideo ||
        mainVideo.paused ||
        mainVideo.ended ||
        isPaused ||
        mainVideo.currentTime * 1000 >= videoDurationMs
      ) {
        clearInterval(videoProgressInterval);
        const completedLine = progressLines[0];
        if (completedLine) {
          completedLine.classList.remove("is-active");
          completedLine.classList.add("is-completed");
        }

        if (splideInstance && !isPaused) {
          setTimeout(() => {
            splideInstance.go("+1");
          }, 300);
        }
        return;
      }
    }, 100);
  }

  // Event Listeners
  if (playPauseBtn) {
    playPauseBtn.addEventListener("click", togglePlayPause);
  }

  if (mainVideo) {
    mainVideo.addEventListener("loadedmetadata", () => {
      // Start custom autoplay for video when metadata is loaded
      if (splideInstance && splideInstance.index === 0) {
        if (!isPaused) {
          startAutoplay(0);
          startVideoProgress();
        }
      }
      updateProgressBars(splideInstance ? splideInstance.index : 0);
    });

    mainVideo.addEventListener("play", () => {
      if (!isPaused && splideInstance && splideInstance.index === 0) {
        updatePlayPauseButton(true);
        startVideoProgress();
      }
    });

    mainVideo.addEventListener("pause", () => {
      if (isPaused) {
        updatePlayPauseButton(false);
        clearInterval(videoProgressInterval);
      }
    });

    mainVideo.addEventListener("ended", () => {
      clearInterval(videoProgressInterval);
      updatePlayPauseButton(false);
      // The autoplay mechanism will handle the transition
    });
  }

  // Click handler for progress bars to navigate
  progressLines.forEach((line) => {
    line.addEventListener("click", (e) => {
      e.preventDefault();
      const slideIndex = parseInt(line.dataset.slideIndex, 10);
      if (splideInstance && !isNaN(slideIndex)) {
        splideInstance.go(slideIndex);
      }
    });
  });

  // Initialize when DOM is ready
  document.addEventListener("DOMContentLoaded", () => {
    initializeSplide();
  });
</script>

---
import videoSrc from 'src/assets/Videos/Universidad.webm';
---

<!-- Título -->
<div class="text-center">
  <h2 class="text-4xl md:text-5xl font-bold text-gray-900">Dentro de UNE</h2>
</div>

<!-- Sección principal -->
<section class="bg-white py-16 px-4" id="uneSection">
  <div class="max-w-7xl mx-auto">
    <div class="flex flex-col lg:flex-row gap-12 items-center">
      <!-- Video -->
      <div class="w-full lg:w-1/2 order-1 lg:order-2">
        <div class="relative rounded-2xl overflow-hidden shadow-2xl">
          <video
            id="uneVideo"
            class="w-full h-auto aspect-[4/3] object-cover"
            muted
            loop
            playsinline
            preload="none"
            data-src={videoSrc}
          >
            <source data-src={videoSrc} type="video/mp4" />
            <img
              src="/Images/Fondo-plantel.webp"
              alt="Estudiantes UNE"
              class="w-full h-full object-cover"
            />
          </video>

          <!-- Controles de video -->
          <div class="absolute top-4 left-4 flex gap-2">
            <!-- Botón de play/pause -->
            <button
              id="playPauseToggle"
              class="w-12 h-12 bg-black/60 hover:bg-black/80 rounded-full flex items-center justify-center shadow-lg transition-all duration-300 backdrop-blur-sm border border-white/20"
            >
              <span id="playIcon">
                <svg
                  class="text-white w-6 h-6"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path d="M8 5v14l11-7z"/>
                </svg>
              </span>
              <span id="pauseIcon" class="hidden">
                <svg
                  class="text-white w-6 h-6"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/>
                </svg>
              </span>
            </button>

            <!-- Botón de audio -->
            <button
              id="audioToggle"
              class="w-12 h-12 bg-black/60 hover:bg-black/80 rounded-full flex items-center justify-center shadow-lg transition-all duration-300 backdrop-blur-sm border border-white/20"
            >
              <span id="muteIcon">
                <svg
                  class="text-white w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z"
                  ></path>
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2"
                  ></path>
                </svg>
              </span>
              <span id="unmuteIcon" class="hidden">
                <svg
                  class="text-white w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728"
                  ></path>
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z"
                  ></path>
                </svg>
              </span>
            </button>
          </div>
        </div>
      </div>

      <!-- Texto -->
      <div class="w-full lg:w-1/2 order-2 lg:order-1">
        <div class="space-y-8">
          <!-- Evento 1 -->
          <div class="flex gap-4">
            <div class="flex-shrink-0">
              <span
                class="inline-flex items-center justify-center w-8 h-8 text-sm font-bold text-gray-600 bg-gray-100 rounded-full"
                >01</span
              >
            </div>
            <div class="flex-1">
              <h3 class="text-xl font-bold text-gray-900 mb-2">Eventos UNE</h3>
              <p class="text-gray-600 mb-4">
                Webinars, talleres congresos y todos los eventos
              </p>
              <a
                href="/vidaestudiantil/General"
                class="inline-flex items-center text-sm font-medium text-gray-900 hover:text-blue-600 transition-colors group"
              >
                <span>Conocer todos los eventos</span>
                <svg
                  class="w-4 h-4 ml-2 transition-transform group-hover:translate-x-1"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
              <div class="mt-4 h-px bg-gray-200"></div>
            </div>
          </div>

          <!-- Evento 2 -->
          <div class="flex gap-4">
            <div class="flex-shrink-0">
              <span
                class="inline-flex items-center justify-center w-8 h-8 text-sm font-bold text-gray-600 bg-gray-100 rounded-full"
                >02</span
              >
            </div>
            <div class="flex-1">
              <h3 class="text-xl font-bold text-gray-900 mb-2">
                Egresados Destacados
              </h3>
              <p class="text-gray-600 mb-4">
                Reconocemos con orgullo a nuestros egresados por sus logros
                académicos, profesionales y su impacto en la sociedad.
              </p>
              <a href="/Orgulloune/General"
                class="inline-flex items-center text-sm font-medium text-gray-900 hover:text-blue-600 transition-colors group"
              >
                <span>¡Postúlate o recomienda a un compañero!</span>
                <svg
                  class="w-4 h-4 ml-2 transition-transform group-hover:translate-x-1"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
              <div class="mt-4 h-px bg-gray-200"></div>
            </div>
          </div>

          <!-- Evento 3 -->
          <div class="flex gap-4">
            <div class="flex-shrink-0">
              <span
                class="inline-flex items-center justify-center w-8 h-8 text-sm font-bold text-gray-600 bg-gray-100 rounded-full"
                >03</span
              >
            </div>
            <div class="flex-1">
              <h3 class="text-xl font-bold text-gray-900 mb-2">
                Beneficios estudiantiles
              </h3>
              <p class="text-gray-600 mb-4">
                Talleres prácticos para adolescentes, mentorías con expertos
                para posgrados. Todo en un solo lugar
              </p>
              <a href="acerca/Apoyos"
                class="inline-flex items-center text-sm font-medium text-gray-900 hover:text-blue-600 transition-colors group"
              >
                <span>Conoce a todo lo que tienes acceso como estudiante</span>
                <svg
                  class="w-4 h-4 ml-2 transition-transform group-hover:translate-x-1"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
              <div class="mt-4 h-px bg-gray-200"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  video {
    -webkit-playsinline: true;
  }

  .aspect-\[4\/3\] {
    aspect-ratio: 4 / 3;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const video = document.getElementById('uneVideo') as HTMLVideoElement;
    const audioToggle = document.getElementById('audioToggle');
    const playPauseToggle = document.getElementById('playPauseToggle');
    const muteIcon = document.getElementById('muteIcon');
    const unmuteIcon = document.getElementById('unmuteIcon');
    const playIcon = document.getElementById('playIcon');
    const pauseIcon = document.getElementById('pauseIcon');
    const section = document.getElementById('uneSection');
    
    let isVideoLoaded = false;
    let hasStartedPlaying = false;

    // Intersection Observer para lazy loading
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting && !isVideoLoaded) {
          loadVideo();
        }
      });
    }, {
      rootMargin: '200px 0px', // Empieza a cargar 200px antes de entrar al viewport
      threshold: 0.1
    });

    // Observar la sección
    if (section) {
      observer.observe(section);
    }

    // Función para cargar el video
    function loadVideo() {
      if (isVideoLoaded) return;
      
      const videoSrc = video.getAttribute('data-src');
      const source = video.querySelector('source');
      
      if (videoSrc && source) {
        source.src = videoSrc;
        video.src = videoSrc;
        video.load();
        isVideoLoaded = true;
        
        // Observer para iniciar reproducción cuando esté más cerca
        const playObserver = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting && !hasStartedPlaying) {
              video.play().then(() => {
                hasStartedPlaying = true;
                updatePlayPauseButton();
              }).catch(e => {
                console.log('Autoplay fue bloqueado:', e);
              });
            } else if (!entry.isIntersecting && hasStartedPlaying) {
              video.pause();
              updatePlayPauseButton();
            }
          });
        }, {
          rootMargin: '50px 0px', // Inicia cuando está muy cerca
          threshold: 0.5
        });
        
        playObserver.observe(section);
      }
    }

    // Función para actualizar el botón de play/pause
    function updatePlayPauseButton() {
      if (!playIcon || !pauseIcon) return;
      
      if (video.paused) {
        playIcon.classList.remove('hidden');
        pauseIcon.classList.add('hidden');
      } else {
        playIcon.classList.add('hidden');
        pauseIcon.classList.remove('hidden');
      }
    }

    // Función para actualizar el botón de audio
    function updateAudioButton() {
      if (!muteIcon || !unmuteIcon) return;
      
      if (video.muted) {
        muteIcon.classList.remove('hidden');
        unmuteIcon.classList.add('hidden');
      } else {
        muteIcon.classList.add('hidden');
        unmuteIcon.classList.remove('hidden');
      }
    }

    // Event listener para el botón de play/pause
    playPauseToggle?.addEventListener('click', () => {
      if (!isVideoLoaded) {
        loadVideo();
        return;
      }
      
      if (video.paused) {
        video.play().then(() => {
          hasStartedPlaying = true;
          updatePlayPauseButton();
        }).catch(e => {
          console.log('Error al reproducir:', e);
        });
      } else {
        video.pause();
        updatePlayPauseButton();
      }
    });

    // Event listener para el botón de audio
    audioToggle?.addEventListener('click', () => {
      if (!isVideoLoaded) return;
      
      video.muted = !video.muted;
      updateAudioButton();
    });

    // Event listeners del video
    video.addEventListener('play', updatePlayPauseButton);
    video.addEventListener('pause', updatePlayPauseButton);
    video.addEventListener('volumechange', updateAudioButton);

    // Inicializar estados de los botones
    updatePlayPauseButton();
    updateAudioButton();

    // Manejar visibilidad de la página
    document.addEventListener('visibilitychange', () => {
      if (document.hidden && hasStartedPlaying && !video.paused) {
        video.pause();
        updatePlayPauseButton();
      }
    });
  });
</script>